plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'de.felix0351'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'

    //Kotlin standard library
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.21'
    //Kotlin Exposed SQL library
    implementation 'org.jetbrains.exposed:exposed-core:0.33.1'
    implementation 'org.jetbrains.exposed:exposed-dao:0.33.1'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.33.1'
    //Kotlin Coroutines Core for JVM
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.5.1-native-mt'
    //Kotlin Ktor library for network communication
    implementation "io.ktor:ktor-client-core:1.6.2"
    implementation "io.ktor:ktor-client-cio:1.6.2"

    //SQLite Driver
    //implementation 'org.xerial:sqlite-jdbc:3.36.0.1'
    //MariaDB Driver
    //implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.4'

}

tasks.build.dependsOn tasks.shadowJar

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

shadowJar {
    exclude "DebugProbesKt.bin"
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
